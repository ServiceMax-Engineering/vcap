#!/bin/bash
#Make sure HOME and USER are set: with monit as a daemon it is not set.
[ -z "$HOME" ] && export HOME=/home/<%= node[:deployment][:user] %>
[ -z "$USER" ] && export USER=<%= node[:deployment][:user] %>
[ -z "$TERM" ] && export TERM=xterm
CLOUD_FOUNDRY_HOME=<%= node[:cloudfoundry][:home] %>
CLOUD_FOUNDRY_VCAP_PATH=<%= node[:cloudfoundry][:path] %>
CLOUD_FOUNDRY_DEPLOYMENT_NAME=<%= node[:deployment][:name] %>

_vcap_log=<%= node[:deployment][:log_path] %>/vcap.log
#don't log status calls:
[ "$1" == "status" ] && _vcap_log=/dev/null
echo `date +%Y-%m-%d-%H%M%S`" vcap called with $@" | tee -a $_vcap_log

# check that the network is correctly setup on this VM: at least one IP that is not the local loop:
ip=`/sbin/ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{ print $2 }' | awk -F: '{ print $2 }'`
if [ -z "$ip" ]; then
  echo "Cloudfoundry cannot start: No network is available." >> $_vcap_log
  exit 1
fi

# Make sure the binaries for this vcap runtime are ready:
if [ -z "$CLOUD_FOUNDRY_CONFIG_PATH" ]; then
# echo "sourcing the cloudfoundry deployment local" | tee -a $_vcap_log
  source $HOME/.cloudfoundry_deployment_local
fi

# reconfigure the urls eventually
if [ "$2" == "cloud_controller" -a "$1" == "start" ]; then
  do_reconfig="true"
fi

if [ "$do_reconfig" == "true" ]; then
  # call the registration app if there is such a thing it will take care of the dns gateway bind
  if [ -f "/home/ubuntu/intalio/registration_app/start_register_app.rb" ]; then
     cd /home/ubuntu/intalio/registration_app
     [ -z "$RUBYOPT" ] && export RUBYOPT="rubygems"
     ruby start_register_app.rb >> $_vcap_log 2>&1 # | tee -a $_vcap_log # can't redirect
  fi

  if [ -d "/etc/issue.d/volatile.d" ]; then
		 # retouch the message files so their timestamp are not messed up by the timezone change on 1st boot
		 sudo touch /etc/issue.d/volatile.d/K00_vcap_welcome
		 sudo touch /etc/issue.d/volatile.d/K01_vcap_on_ip  
     # Don't override the Please Register
     please_register=`grep Please /etc/issue`
     [ -z "$please_register" ] && echo "Application starting... This may take a few minutes." > /etc/issue.d/volatile.d/K50_applications_status
  fi
fi

#call vcap with the cmd-line args:
$CLOUD_FOUNDRY_VCAP_PATH/dev_setup/bin/vcap_dev --name $CLOUD_FOUNDRY_DEPLOYMENT_NAME --dir $CLOUD_FOUNDRY_HOME $@ | tee -a $_vcap_log

