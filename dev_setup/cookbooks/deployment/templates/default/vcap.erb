#!/bin/bash
#Make sure HOME and USER are set: with monit as a daemon it is not set.
[ -z "$HOME" ] && export HOME=/home/<%= node[:deployment][:user] %>
[ -z "$USER" ] && export USER=<%= node[:deployment][:user] %>
[ -z "$TERM" ] && export TERM=xterm

# make sure avahi is publishing the aliases if avahi-publishaliases is installed
[ -f /usr/bin/avahi-publish-aliases -a ! -f /tmp/avahi-publish-alias.pid ] && /usr/bin/avahi-publish-aliases

_vcap_log=<%= node[:deployment][:log_path] %>/vcap.log
#don't log status calls:
[ "$1" == "status" ] && _vcap_log=/dev/null
echo `date +%Y-%m-%d-%H%M%S`" vcap called with $@" | tee -a $_vcap_log

# Make sure the binaries for this vcap runtime are ready:
if [ -z "$CLOUD_FOUNDRY_CONFIG_PATH" ]; then
  echo "sourcing the cloudfoundry deployment profile and local" | tee -a $_vcap_log
  source $HOME/.cloudfoundry_deployment_local | tee -a $_vcap_log
  source $HOME/.cloudfoundry_deployment_profile | tee -a $_vcap_log
fi


# reconfigure the urls eventually
if [ "$2" == "dea" -a "$1" != "stop" ]; then
  do_reconfig="true"
elif [ -z "$2" ]; then
  [ "$1" == "restart" ] && do_reconfig="true"
  [ "$1" == "start" ] && do_reconfig="true"
fi
if [ "$do_reconfig" == "true" ]; then
  # this is called before the apps are started and after the cloud_controller is started
  # let's make sure that the applications are correctly configured with their url

  # plug your own apps here:
  # call the registration app if there is such a thing it will take care of the dns gateway bind
  if [ -f "/home/ubuntu/intalio/registration_app/start_register_app.rb" ]; then
     cd /home/ubuntu/intalio/registration_app
     [ -z "$RUBYOPT" ] && export RUBYOPT="rubygems"
     ruby start_register_app.rb >> $_vcap_log 2>&1 # | tee -a $_vcap_log # can't redirect
  fi


  cd /home/<%= node[:deployment][:user] %>
  echo "calling vmc_knife to make sure the urls are up to date." | tee -a $_vcap_log
  vmc_knife login | tee -a $_vcap_log
  vmc_knife configure-applications | tee -a $_vcap_log
  vmc_knife configure-vcap-etc-hosts | tee -a $_vcap_log
  vmc_knife configure-vcap-mdns | tee -a $_vcap_log
fi

#call vcap with the cmd-line args:
<%= node[:cloudfoundry][:path] %>/dev_setup/bin/vcap_dev --name <%= node[:deployment][:name] %> --dir <%= node[:cloudfoundry][:home] %> $@ | tee -a $_vcap_log
