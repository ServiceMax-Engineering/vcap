#!/bin/bash
#Make sure HOME and USER are set: with monit as a daemon it is not set.
[ -z "$HOME" ] && export HOME=/home/<%= node[:deployment][:user] %>
[ -z "$USER" ] && export USER=<%= node[:deployment][:user] %>
[ -z "$TERM" ] && export TERM=xterm
CLOUD_FOUNDRY_HOME=<%= node[:cloudfoundry][:home] %>
CLOUD_FOUNDRY_VCAP_PATH=<%= node[:cloudfoundry][:path] %>
CLOUD_FOUNDRY_DEPLOYMENT_NAME=<%= node[:deployment][:name] %>

_vcap_log=<%= node[:deployment][:log_path] %>/vcap.log
#don't log status calls:
[ "$1" == "status" ] && _vcap_log=/dev/null
echo `date +%Y-%m-%d-%H%M%S`" vcap called with $@" | tee -a $_vcap_log

# check that the network is correctly setup on this VM: at least one IP that is not the local loop:
ip=`/sbin/ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{ print $2 }' | awk -F: '{ print $2 }'`
if [ -z "$ip" ]; then
  echo "Cloudfoundry cannot start: No network is available." >> $_vcap_log
  exit 1
fi

# Make sure the binaries for this vcap runtime are ready:
if [ -z "$CLOUD_FOUNDRY_CONFIG_PATH" ]; then
# echo "sourcing the cloudfoundry deployment local" | tee -a $_vcap_log
  source $HOME/.cloudfoundry_deployment_local
fi

#call vcap with the cmd-line args:
$CLOUD_FOUNDRY_VCAP_PATH/dev_setup/bin/vcap_dev --name $CLOUD_FOUNDRY_DEPLOYMENT_NAME --dir $CLOUD_FOUNDRY_HOME $@ | tee -a $_vcap_log

