---
# Cloud Controller URI
external_uri: api.<%= node[:deployment][:domain] %>
description: <%= node[:deployment][:welcome] %>
support_address: <%= node[:cloud_controller][:support_address] %>


# local_route is the IP address of a well known server on your network, it
# is used to choose the right ip address (think of hosts that have multiple nics
# and IP addresses assigned to them) of the host running the cloud controller. Default
# value of nil, should work in most cases.
local_route: <%= node[:cloud_controller][:local_route] %>

# Specifies if new users are allowed to register via VMC
allow_registration: <%= node[:cloud_controller][:allow_registration] %>

# Allow applications to register URIs that are outside your domain.
# Legacy (FIXME REMOVE)
allow_external_app_uris: <%= node[:cloud_controller][:app_uris][:allow_external] %>

# This dicatates what the uri namespace rules
# are for applications. Admins can overide any of the
# below accept taking a used uri.

app_uris:
  # Allow applications to register URIs that are outside your domain.
  allow_external: <%= node[:cloud_controller][:app_uris][:allow_external] %>
#  reserved_file:
#  reserved_list: [www, test, dash, register, foo, bar]
#  reserved_length: 3

external_port: 9022 #public CC port

# nginx proxy provide multiple functions including offloading of file uploads/downloads.
nginx:
  use_nginx: false   #nginx proxy in front of CC?
  # instance_socket: /tmp/cloud_controller.sock
  insecure_instance_port: 9025 #debug only!!!! -- not for production use.

# if log_file is set, it must be a fully-qualified path,
# because the bin/vcap script reads it directly from the file.
logging:
  level: debug
# file:

# Settings for the rails logger
rails_logging:
  level: debug
# file:

redis:
  host: 127.0.0.1
  port: 5454
# password:

directories:
  droplets: /var/vcap/shared/droplets
  resources: /var/vcap/shared/resources
  # default values, relative to Rails.root. Leading slash for full path.
  staging_manifests: <%= File.join(node[:deployment][:config_path], "staging") %>
  staging_cache: /var/vcap/data/cloud_controller/staging

  # set to true to prevent filesystem resource leaks
  # nukes tmpdir on startup -- be careful!
  nuke_tmp_on_startup: false

  tmpdir: /var/vcap/data/cloud_controller/tmp

# NATS message bus URI
mbus: nats://<%= node[:nats_server][:user] %>:<%= node[:nats_server][:password] %>@<%= node[:nats_server][:host] %>:<%= node[:nats_server][:port] %>/
keys:
  password: '<%= node[:cloud_controller][:keys][:password] %>'
  token: '<%= node[:cloud_controller][:keys][:token] %>'
  token_expiration: <%= node[:cloud_controller][:keys][:token_expiration] %>
pid: /var/vcap/sys/run/cloud_controller.pid
rails_environment: production
database_environment: # replaces database.yml
  production:
    database: <%= node[:ccdb][:database] %>
    host: <%= node[:ccdb][:host] %>
    port: <%= node[:ccdb][:port] %>
    encoding: utf8
    username: <%= node[:ccdb][:user] %>
    password: <%= node[:ccdb][:password] %>
    adapter: <%= node[:ccdb][:adapter] %>
    timeout: 2000
    template: template0 # Required for utf8 encoding
# App staging parameters
staging:
  max_concurrent_stagers: 10
  # Max duration for staging process
  max_staging_runtime:    <%= node[:cloud_controller][:stager][:max_staging_runtime] %> # secs
<%if node[:cloud_controller][:stager] %>  # Create a secure environment for staging
  secure: <%= node[:cloud_controller][:stager][:secure] %>
  new_stager_percent: <%= node[:cloud_controller][:stager][:new_stager_percent] %>
  new_stager_email_regexp: <%= node[:cloud_controller][:stager][:new_stager_email_regexp] %>
<%if node[:cloud_controller][:stager][:auth] %>  auth:
    user: <%= node[:cloud_controller][:stager][:auth][:user] %>
    password: <%= node[:cloud_controller][:stager][:auth][:password] %>
<% end %><% end %>
<% if node[:cloud_controller][:max_droplet_size] %>
#max size of the unzipped app (overrides the 512M and makes it <%= node[:cloud_controller][:max_droplet_size] %>) in bytes:
max_droplet_size: <%= @max_droplet_size %>
<% end %>

# admin support
admins: [ <%= node[:cloud_controller][:admins].join(", ") %> ]
https_required: false
https_required_for_admins: false

# Controls the amount of resources assigned to a user
# Normal user accounts
default_account_capacity:
  memory:   <%= node[:capacity][:memory] %>
  app_uris: <%= node[:capacity][:max_uris] %>
  services: <%= node[:capacity][:max_services] %>
  apps:     <%= node[:capacity][:max_apps] %>

# Services we provide, and their tokens. Avoids bootstrapping DB
builtin_services:
  <% @builtin_services.each do |service_name| %>
  <%= service_name %>:
   token: <%= node[(service_name + "_node").to_sym] && node[(service_name + "_node").to_sym][:token] ?
      node[(service_name + "_node").to_sym][:token] : "0xdeadbeef" %>
  <% end %>

# Enable/disable starting apps in debug modes.
allow_debug: <%= node[:cloud_controller][:allow_debug] %>

# Supported runtime versions and debug modes.
# Used for /info/runtimes endpoint (served unfiltered as JSON)
runtimes:<% if @ruby18_enabled %>
  ruby18:
    version: 1.8.7<% end %>
  ruby19:
    version: 1.9.2
  node:
    version: 0.4.12
  java:
    version: 1.6.0
    debug_modes:
      - run
      - suspend
  php:
    version: 5.3.[2-6]
  erlangR14B02:
    version: ".* 5.8.3"
  python26:
    version: 2.6.5
