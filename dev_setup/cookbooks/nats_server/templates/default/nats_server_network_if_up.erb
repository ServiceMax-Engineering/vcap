#! /bin/sh
# Reload the nats_server when an interface comes up, to allow it to start
# listening on new addresses.
# This is only enabled if the config file of the nats_server has a tracked-net-iface line
# That defines what interface its IP must be.

set -e

# Don't bother to restart nats-server when lo is configured.
if [ "$IFACE" = lo ]; then
        exit 0
fi

# Only run from ifup.
if [ "$MODE" != start ]; then
        exit 0
fi

# nats_server only cares about inet and inet6. Get ye gone, strange people
# still using ipx.
if [ "$ADDRFAM" != inet ] && [ "$ADDRFAM" != inet6 ]; then
        exit 0
fi

# Is the exec ready?
if [ ! -e /etc/init.d/nats_server ]; then
        exit 0
fi

# Update the host on which the nats-server is running.
# At the moment we only look after one particular interface which
# is defined in the config file of nats-server.
# Read the path of the config file: it look like this:
# DAEMON_ARGS="-d -c /home/ubuntu/cloudfoundry/.deployments/intalio_micro_cf/config/nats_server/nats_server.yml"
NATS_CONF=`grep DAEMON_ARGS=  /etc/init.d/nats_server | egrep -o ' -c [^\"]*' | cut -d' ' -f3`
# Now in that file look for the tracked interface:
# tracked-net-iface: eth0
NATS_TRACKED_IFACE=`grep tracked-net-iface: $NATS_CONF | cut -d' ' -f2`
if [ "$IFACE" != "$NATS_IFACE" ]; then
        exit 0
fi

# OK let's read the IP for this IFACE and then make sure that nats_server config file has that IP
IP=`ifconfig | sed -n '/'$IFACE'/{n;p;}' | grep 'inet addr:' | grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | head -1`
if [ -z "$IP" ]; then
#Unexpected to say the least but we don't want to replace a good IP by a blank string.
        exit 0;
fi

#Currently written IP: net: 192.168.1.8
NATS_IP=`grep net: $NATS_CONF | cut -d' ' -f2`
if [ "$NATS_IP" = "$IP" ]; then
#no change bye
        exit 0
fi

# It changed. Let's update them all:
#sed -i "s/#{@old_local_ip}/#{@local_ip}/g
#/home/ubuntu/cloudfoundry/_vcap update-ip $NATS_TRACKED_IFACE
find <%= node[:deployment][:config_path] %>/ -type f -name *.yml -exec sed -i 's/'$NATS_IP'/'$IP'/g' {} \; 

# Make sure that the nats-server is started before we restart it.
if [ ! -f /var/run/nats_server.pid ] || \
   [ "$(ps -p "$(cat /var/run/nats_server.pid)" -o comm=)" != 'nats-server' ]; then
        exit 0
fi

# Let's use a force-reload.
/etc/init.d/nats_server stop || true
/etc/init.d/nats_server start || true

# TODO: We should also reload the vcap components at this point if they are started
# Counting on monit to do this

exit 0


