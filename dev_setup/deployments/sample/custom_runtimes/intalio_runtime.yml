---
# Only rubys, java, nodejs; all the services including postgresql except mysql.
#force postgresql to 127.0.0.1: this is a Micro-CF and the IP keeps changing.
deployment:
  name: "intalio_devbox"
  domain: "intalio.priv"
  etc_issue_msg: "Welcome to Intalio"
  welcome: "Welcome to Intalio"
  vmc_knife_default_recipe: /home/ubuntu/cloudfoundry/intalio_recipe.json
capacity:
  memory: 8192
  max_uris: 32
  max_services: 32
  max_apps: 24
nginx:
  client_max_body_size: 512M
  proxy_connect_timeout: 40
  proxy_send_timeout: 480
  proxy_read_timeout: 480
jobs:
  install:
    - cloudfoundry:
        vmc:
          version: 0.3.16.beta.3
        git:
          vcap:
             repo: "https://github.com/hmalphettes/vcap"
             branch: "java_start"
             enable_submodules: false
          vcap_services:
             repo: "https://github.com/hmalphettes/vcap-services"
             branch: "mongodb_more_params"
    - nats_server:
        port: 4222
        user: nats
        password: nats  #override this
        tracked_net_iface: eth0
    - stager:
        max_staging_duration: 360
    - cloud_controller:
        local_route: 127.0.0.1
        admins: [ hmalphettes@intalio.com ]
        description: "Intalio CF"
        support_address: "http://support.intalio.com"
        app_uris:
          { allow_external: true }
        allow_registration: true
        builtin_services:
          - redis
          - mongodb
          - elasticsearch
          - postgresql
        keys:
          token_expiration: 604800 # 7 * 24 * 60 * 60 (= 1 week) * 10
        stager:
          max_staging_runtime: 480
          secure: false
          new_stager_percent: 100
          new_stager_email_regexp: system@intalio\.com
    - router:
        redirect404: /static/404/404.html
        client_inactivity_timeout: 480
    - dns_publisher
    - health_manager
    - ccdb: #127.0.0.1 is good for a micro-cloud setup. otherwise comment out and let the IP
        host: 127.0.0.1
    - dea: #The max amount of memory available to run the apps.
        max_memory: 8192
        runtimes:
          - ruby19
          - java
          - nodejs
        force_http_sharing: false
    - redis_node:
        index: "0"
    - redis_gateway
    - mongodb_node:
        index: "0"
        available_memory: 8192
        max_memory: 512
        version: 2.0.2
        node_timeout: 35 #2 is the default but we keep getting timeout issues. 8 works well on virtualbox. on kvm with raw disk, ...
        mongod_conf:
          journal: false
          noprealloc: true
          quota: false
          quotafiles: -1
          smallfiles: false
    - mongodb_gateway:
        service:
          timeout: 30
    - elasticsearch_node:
        index: "0"
        available_memory: 8192
        max_memory: 3072
        version: 1.1.1
        node_timeout: 35 #2 is the default but we keep getting timeout issues. 8 works well on virtualbox. on kvm with raw disk, ...
    - elasticsearch_gateway:
        service:
          timeout: 30
    - postgresql_node:
        version: "9.1"
        index: "0"
        max_db_size: 5128 #each db max
        available_storage: 65536 #65G max of total DBs on this node
        max_db_conns: 50
        max_long_query: 360
        max_long_tx: 480
        listen_addresses: * #listen to any addresses
        local_acl: trust #trust local connections on psql for admin jobs
        pg_hba_extra: #an extra access rule line: free for all for now
          user: all
          database: all
          ip_and_mask: "0.0.0.0/0"
          pass_encrypt: md5
        server_root_user: vcap
        server_root_password: vcap
        extensions_in_template1: "ltree,uuid-ossp"
        node_timeout: 8
    - postgresql_gateway
    - monit:
        daemon_startup: 1
        vcap_components:
           - cloud_controller
           - dea
           - health_manager
           - mongodb_gateway
           - mongodb_node
           - postgresql_gateway
           - postgresql_node
           - redis_gateway
           - redis_node
           - router
           - stager
           - dns_publisher
        vcap_daemons:
           - nats_server
        others:
           - postgresql
intalio_cf:
  delete_recipe: true
  delete_apps: true
  delete_data: true
  delete_downloaded_apps: true
  checkout_vmc_knife: true
  checkout_vmc_knife_url: https://github.com/hmalphettes/vmc-knife.git
  checkout_vmc_knife_install: false
# these 2 values would update intalio.war to the last build:
#  intalio_download_url: "#{this['download_server']}/p2repo/com/intalio/cloud/hydrogen/master/current/intalio.war"
#  intalio_update_available_version_url: #{this['download_server']}/p2repo/com/intalio/cloud/hydrogen/master/current/compositeArtifacts.xml

