#!/bin/bash

[ -z "$IMG" ] && IMG="Ubuntu64Base.ova"
NAME=`basename $IMG .ova`

OS=`uname -s`
if [ "$OS" = "Linux" ]; then
    PLATFORM="Linux"
elif [ "$OS" = "Darwin" ]; then
    PLATFORM="MacOSX"
else
    echo "Unknown System, cancelling setup"
    exit 1
fi

set -e

#read the vcap repo and branch to use according to the current checkout for the default non interactive values.
if [ -z "$VCAP_REPO" ]; then
  _repo="$(git remote show origin | grep 'Fetch URL' | cut -d' ' -f5)"
  #Replace the private git url by the public one
  # So that we can actually use that on the VM
  #For example: git@github.com:hmalphettes/vcap.git
  #Replaced by: https://github.com/hmalphettes/vcap.git
  if [ -n "`echo $_repo | grep 'git@github.com:'`" ]; then 
    _repo=`echo $_repo | sed 's/^git@github.com:/https:\/\/github.com\//'`
  fi
  read -p "Enter the vcap github repository to use (default $_repo) " VCAP_REPO
  [ -z "$VCAP_REPO" ] && VCAP_REPO=$_repo
  if [ -z "$VCAP_GITHUB_ACCOUNT" ]; then
    VCAP_GITHUB_ACCOUNT="`echo $VCAP_REPO | cut -d'/' -f4`"
  fi
fi
if [ -z "$VCAP_BRANCH" ]; then
  _branch="$(git branch 2>/dev/null | sed -e "/^\s/d" -e "s/^\*\s//")"
  read -p "Enter the branch to use (default $_branch) " VCAP_BRANCH
  [ -z "$VCAP_BRANCH" ] && VCAP_BRANCH=$_branch
  [ -z "$VCAP_GITHUB_ACCOUNT" ] && VCAP_GITHUB_ACCOUNT="cloudfoundry"
fi

if [ "$PLATFORM"="MacOSX" ]; then
  if [ -a "$(md5 -q $IMG)" != 'a7ad85e2088bad4a7087f7795c2651cd' ]; then
    echo 'Downloading base image...'
    curl https://s3.amazonaws.com/mashion/$NAME.ova > "$IMG"
  else
    echo 'Image already downloaded.'
  fi
elif [ ! -f "$IMG" -o "$(md5sum --quiet --check $IMG)" != 'a7ad85e2088bad4a7087f7795c2651cd' ]; then
  echo 'Downloading base image...'
  wget https://s3.amazonaws.com/mashion/$NAME.ova > "$IMG"
else
  echo 'Image already downloaded.'
fi

if VBoxManage list vms | cut -d'"' -f2 | grep -q "$NAME"; then
  echo "$NAME already imported."
else
  VBoxManage import "$IMG"
fi

NIC=$(echo $(VBoxManage list bridgedifs | grep -m1 Name | awk '{ $1=""; print $0 }'))
echo "Bridging networking to $NIC"
VBoxManage modifyvm "$NAME" --nic1 bridged --bridgeadapter1 "$NIC"
VBoxManage startvm "$NAME" --type headless

echo 'Waiting for IP address...'
ip_info() {
  VBoxManage guestproperty get "$NAME" /VirtualBox/GuestInfo/Net/0/V4/IP | grep Value
}

while ! ip_info > /dev/null; do
  sleep 1
done

IP=`ip_info | cut -d' ' -f2`

KEY=`ls -f "$HOME/.ssh/id_dsa.pub" "$HOME/.ssh/id_rsa.pub" 2>/dev/null | head -n1`
if [ ! -f "$KEY" ]; then
  read -p "Couldn't find SSH key, please enter the path to your SSH keyfile: " KEY
fi

if [ -f "$KEY" ]; then
  echo "Installing key $KEY..."
  cat $KEY | ssh -o StrictHostKeyChecking=no ubuntu@$IP 'mkdir .ssh; cat > .ssh/authorized_keys; chmod -R go-rw .ssh; sudo passwd -d ubuntu'
else
  echo "Key $KEY not found, skipping SSH key installation."
fi

echo 'Starting CloudFoundry install...'
cmd="sudo apt-get install curl; export VCAP_REPO=$VCAP_REPO; export VCAP_BRANCH=$VCAP_BRANCH; bash -x < <(curl -s -k -B https://raw.github.com/$VCAP_GITHUB_ACCOUNT/vcap/$VCAP_BRANCH/setup/install)"
echo "Command executed: ssh ubuntu@$IP ""$cmd"""
ssh ubuntu@$IP "$cmd"

start_cmd="export rvm_trust_rvmrcs_flag=1; cd cloudfoundry/vcap; bin/vcap/start"
ssh ubuntu@$IP "$start_cmd"

cat <<-DOC

All done!

Log in with:   ssh ubuntu@$IP
Shutdown with: VBoxManage controlvm $NAME acpipowerbutton

Make sure to add the following to your hosts file:
  $IP api.vcap.me myappname.vcap.me

If you haven't downloaded VMC yet, run:
  gem install vmc

And create and account with:
  vmc register

DOC
